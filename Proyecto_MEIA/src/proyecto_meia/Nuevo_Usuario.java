package proyecto_meia;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.print.attribute.Size2DSyntax.MM;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author josue
 */
public class Nuevo_Usuario extends javax.swing.JFrame {

    /**
     * Creates new form Nuevo_Usuario
     */
    public Nuevo_Usuario() {
        initComponents();
        txtmostrador.setEditable(false);
        
        txtUserName.requestFocus();
        txtUserName.setBackground(Color.LIGHT_GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        txtTelefono = new javax.swing.JFormattedTextField();
        txtFechaNac = new javax.swing.JFormattedTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtUserName = new javax.swing.JTextField();
        txtmostrador = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnCargarFoto = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        lblFechaNac = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        btnCrear = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtCorreoAlterno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 153, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 790, 10));

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTelefonoMouseClicked(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyPressed(evt);
            }
        });
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 260, -1));

        try {
            txtFechaNac.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFechaNac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFechaNacMouseClicked(evt);
            }
        });
        txtFechaNac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaNacKeyPressed(evt);
            }
        });
        getContentPane().add(txtFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, 260, -1));

        txtPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPasswordMouseClicked(evt);
            }
        });
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordKeyTyped(evt);
            }
        });
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 260, -1));

        txtUserName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUserNameMouseClicked(evt);
            }
        });
        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserNameKeyPressed(evt);
            }
        });
        getContentPane().add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 260, -1));

        txtmostrador.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        getContentPane().add(txtmostrador, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 210, 120));

        lblUserName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 255, 255));
        lblUserName.setText("Nombre de Usuario:");
        getContentPane().add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 100, -1));

        btnCargarFoto.setText("Cargar Foto");
        btnCargarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarFotoActionPerformed(evt);
            }
        });
        getContentPane().add(btnCargarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 210, -1));

        lblFoto.setForeground(new java.awt.Color(255, 255, 255));
        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setText("Foto");
        lblFoto.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), null));
        getContentPane().add(lblFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 210, 170));

        lblNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setText("Nombre:");
        getContentPane().add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 60, 20));

        lblApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblApellido.setForeground(new java.awt.Color(255, 255, 255));
        lblApellido.setText("Apellido:");
        getContentPane().add(lblApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 60, 20));

        lblPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Contrase√±a:");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 80, -1));

        lblCorreo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCorreo.setForeground(new java.awt.Color(255, 255, 255));
        lblCorreo.setText("Correo:");
        getContentPane().add(lblCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, -1, -1));

        lblFechaNac.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFechaNac.setForeground(new java.awt.Color(255, 255, 255));
        lblFechaNac.setText("Fecha de Nacimiento:");
        getContentPane().add(lblFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 140, 20));

        lblTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTelefono.setForeground(new java.awt.Color(255, 255, 255));
        lblTelefono.setText("Telefono:");
        getContentPane().add(lblTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 60, 20));

        btnCrear.setForeground(new java.awt.Color(51, 51, 51));
        btnCrear.setText("Crear Usuario");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 260, -1));

        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreMouseClicked(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 260, -1));

        txtApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtApellidoMouseClicked(evt);
            }
        });
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidoKeyPressed(evt);
            }
        });
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 260, -1));

        txtCorreoAlterno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCorreoAlternoMouseClicked(evt);
            }
        });
        txtCorreoAlterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoAlternoKeyPressed(evt);
            }
        });
        getContentPane().add(txtCorreoAlterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 260, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Crea un Nuevo Usuario");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 560, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_meia/Dise√±o sin t√≠tulo.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static File fichero;
    Procesos Acceso = new Procesos();
    
    private void btnCargarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarFotoActionPerformed
        
        int resultado;
        CargarFoto ventana = new CargarFoto();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG","jpg","png");
        ventana.jfchCargarFoto.setFileFilter(filtro);
        resultado= ventana.jfchCargarFoto.showOpenDialog(null);

        if (JFileChooser.APPROVE_OPTION == resultado){
            fichero = ventana.jfchCargarFoto.getSelectedFile();
            try
            {
                   ImageIcon icon = new ImageIcon(fichero.toString());
                   Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), Image.SCALE_DEFAULT));
                   lblFoto.setText(null);
                   lblFoto.setIcon( icono );
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Error abriendo la imagen "+ ex);
            }
        }
        
    }//GEN-LAST:event_btnCargarFotoActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Login Principal = new Login();
        Principal.setLocationRelativeTo(null);
        Principal.show();
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        
        String Resultado;
        String Password = txtPassword.getText();
        
        try {
            String ValidacionContrase√±a = ValidarContrase√±a(Password);
            
            if (ValidacionContrase√±a != "")
            {
                if(ValidacionContrase√±a.charAt(0) == '1')
                {
                    String[] condicional = ValidacionContrase√±a.split(",");
                    JOptionPane.showMessageDialog(null, "El nivel de seguridad de su contrase√±a es Bajo.\n"
                            + " La contrase√±a debe contener al menos " + condicional[1] + " caracteres.\n"
                            + " Ingrese otra contrase√±a");
                    txtPassword.setText("");
                }
                else if (ValidacionContrase√±a.equals("2"))
                {
                    JOptionPane.showMessageDialog(null, "El nivel de seguridad de su contrase√±a es Bajo.\n"
                            + " La contrase√±a debe contener al menos una Mayuscula\n"
                            + " Ingrese otra contrase√±a");
                    txtPassword.setText("");
                }
            }
            else
            {
                int puntuacion = obtenerNivelSeguridad(Password);
                
                byte rol = 1;
                byte Status = 1;
                
                if (Acceso.ValidarCaracteres(txtUserName.getText(), 0))
                {                    
                    JOptionPane.showConfirmDialog(null, "Seg√∫n investigaciones extensas hemos \n"
                            + "determinado que un username mayor de \n"
                            + "20 caracteres no es eficiente.\n\n"
                            + "Debes ingresar un UserName v√°lido", "Inv√°lido", JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
                    txtUserName.setText("");
                    return;
                }
                
                if (Acceso.ValidarCaracteres(txtNombre.getText(), 1))
                {                    
                    JOptionPane.showConfirmDialog(null, "Seg√∫n investigaciones extensas hemos \n"
                            + "determinado que no existe ningun nombre \n"
                            + "con m√°s de 30 caracteres.\n\n"
                            + "Debes ingresar un nombre v√°lido", "Inv√°lido", JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
                    txtNombre.setText("");
                    return;
                }
                
                if (Acceso.ValidarCaracteres(txtApellido.getText(), 1))
                {                    
                    JOptionPane.showConfirmDialog(null, "Seg√∫n investigaciones extensas hemos \n"
                            + "determinado que no existe ningun apellido \n"
                            + "con m√°s de 30 caracteres.\n\n"
                            + "Debes ingresar un apellido v√°lido", "Inv√°lido", JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
                    txtApellido.setText("");
                    return;
                }
                
                if (Acceso.ValidarCaracteres(txtPassword.getText(), 2))
                {                    
                    JOptionPane.showConfirmDialog(null, "Para evitar complicaciones a futuro no podemos \n"
                            + "registrar una clave tan larga.\n\n"
                            + "Debes ingresar una contrase√±a que tenga como m√°ximo 40 caracteres.", "Inv√°lido", 
                            JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
                    txtPassword.setText("");
                    return;
                }
                
                if (Acceso.ValidarCaracteres(txtCorreoAlterno.getText(), 2))
                {                    
                    JOptionPane.showConfirmDialog(null, "Lamentablemente no es posible registrar \n"
                            + "un correo tan largo!\n"
                            + "Debes ingresar un correo que tenga como m√°ximo 40 caracteres.\n",
                            "Inv√°lido", JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
                    txtCorreoAlterno.setText("");
                    return;
                }
                
                if (Acceso.ValidarCaracteres(fichero.getAbsolutePath(), 3))
                {                    
                    JOptionPane.showConfirmDialog(null, "La URL de tu fotograf√≠a es demasiado larga!.\n"
                            + "Debes seleccionar una fotografia de otra ubicaci√≥n.", "Inv√°lido", 
                            JOptionPane.OK_OPTION, JOptionPane.ERROR_MESSAGE);
                    txtPassword.setText("");
                    return;
                }
                
                try
                {
                    int numero = Integer.parseInt(txtTelefono.getText());
                    String cadena = txtTelefono.getText().toString();
                    
                    if (cadena.length() != 8)
                    {
                        JOptionPane.showMessageDialog(null, "El numero de telefono ingresado no tiene la longitud adecuada.\n"
                            + "Ingresa una numero telefonico valido por favor");
                        txtTelefono.setText("");
                        return;
                    }
                }
                catch (NumberFormatException ex)
                {
                    JOptionPane.showMessageDialog(null, "El numero de telefono ingresado no es valido.\n"
                            + "Ingresa una numero telefonico valido por favor");
                    txtTelefono.setText("");
                    return;
                }
                
                
                Date Fecha;
                try
                {
                    String fecha = txtFechaNac.getText();
                    SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/yyyy");
                    
                    Fecha = formatofecha.parse(fecha);
                }
                catch (ParseException ex)
                {
                    JOptionPane.showMessageDialog(null, "La fecha ingresada es invalida.\n"
                            + "Ingresa una fecha valida por favor");
                    txtFechaNac.setText("");
                    return;
                }
                
                if (fichero == null)
                {
                    JOptionPane.showMessageDialog(null, "Debe Seleccionar una Foto de Perfil");
                    return;
                }
                
                if(txtCorreoAlterno.getText().contains("@") == false)
                {
                    JOptionPane.showMessageDialog(null, "El Campo de Correo debe contener el S√≠mbolo @");
                    txtCorreoAlterno.setText("");
                    return;
                }
                
                Usuario NewUser = new Usuario();
                String pathRuta = "C:\\MEIA\\Bitacora_Usuarios.txt";
                File Archivo = new File(pathRuta);
                if (Archivo.length() == 0)
                {
                    NewUser = new Usuario(Acceso.RellenarCaracteres(txtUserName.getText(), 0) , Acceso.RellenarCaracteres(txtNombre.getText(), 1) , 
                            Acceso.RellenarCaracteres(txtApellido.getText(), 1) , Acceso.RellenarCaracteres(Password, 2) , rol , Fecha , 
                            Acceso.RellenarCaracteres(txtCorreoAlterno.getText(), 2) , Integer.parseInt(txtTelefono.getText()) , 
                            Acceso.RellenarCaracteres(fichero.getAbsolutePath(), 3) , Status);
                }
                else
                {
                    rol = 0;
                    NewUser = new Usuario(Acceso.RellenarCaracteres(txtUserName.getText(), 0) , Acceso.RellenarCaracteres(txtNombre.getText(), 1) , 
                            Acceso.RellenarCaracteres(txtApellido.getText(), 1) , Acceso.RellenarCaracteres(Password, 2) , rol , Fecha , 
                            Acceso.RellenarCaracteres(txtCorreoAlterno.getText(), 2) , Integer.parseInt(txtTelefono.getText()) , 
                            Acceso.RellenarCaracteres(fichero.getAbsolutePath(), 3) , Status);
                    //NewUser = new Usuario(txtUserName.getText(),txtNombre.getText(),txtApellido.getText(),Password,rol,Fecha,txtCorreoAlterno.getText(),Integer.parseInt(txtTelefono.getText()),fichero.getAbsolutePath(),Status);
                    
                }
                //Usuario NewUser = new Usuario(txtUserName.getText(),txtNombre.getText(),Password,);
                switch(puntuacion) 
                {
                    case 0:
                        Resultado = "Apenas Aceptable";
                        txtmostrador.setText("Nivel de Seguridad \nde la Contrase√±a: "+Resultado);
                        IngresarUsuarioBitacora(NewUser);
                        break;
                        
                    case 1:
                        Resultado = "Intermedio";
                        txtmostrador.setText("Nivel de Seguridad \nde la Contrase√±a: "+Resultado);
                        IngresarUsuarioBitacora(NewUser);
                        break;
                        
                    case 2:
                        Resultado = "Bueno";
                        txtmostrador.setText("Nivel de Seguridad \nde la Contrase√±a: "+Resultado);
                        IngresarUsuarioBitacora(NewUser);
                        break;
                        
                    case 3:
                        Resultado = "Fuerte";
                        txtmostrador.setText("Nivel de Seguridad \nde la Contrase√±a: "+Resultado);
                        IngresarUsuarioBitacora(NewUser);
                        break;
                }
            }
            
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(Nuevo_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnCrearActionPerformed

    
    
    private void txtUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtNombre.requestFocus();
    }//GEN-LAST:event_txtUserNameKeyPressed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtApellido.requestFocus();
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtApellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtPassword.requestFocus();
    }//GEN-LAST:event_txtApellidoKeyPressed

    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtTelefono.requestFocus();
    }//GEN-LAST:event_txtPasswordKeyPressed

    private void txtTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtCorreoAlterno.requestFocus();
    }//GEN-LAST:event_txtTelefonoKeyPressed

    private void txtCorreoAlternoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoAlternoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtFechaNac.requestFocus();
    }//GEN-LAST:event_txtCorreoAlternoKeyPressed

    private void txtFechaNacKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaNacKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            btnCargarFoto.requestFocus();
    }//GEN-LAST:event_txtFechaNacKeyPressed

    
    
    private void txtUserNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUserNameMouseClicked

    }//GEN-LAST:event_txtUserNameMouseClicked

    private void txtNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMouseClicked

    }//GEN-LAST:event_txtNombreMouseClicked

    private void txtApellidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidoMouseClicked

    }//GEN-LAST:event_txtApellidoMouseClicked

    private void txtPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPasswordMouseClicked

    }//GEN-LAST:event_txtPasswordMouseClicked

    private void txtTelefonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoMouseClicked

    }//GEN-LAST:event_txtTelefonoMouseClicked

    private void txtCorreoAlternoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCorreoAlternoMouseClicked

    }//GEN-LAST:event_txtCorreoAlternoMouseClicked

    private void txtFechaNacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFechaNacMouseClicked

    }//GEN-LAST:event_txtFechaNacMouseClicked

    private void txtPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyTyped
        // El de abajo lo hace mejor
    }//GEN-LAST:event_txtPasswordKeyTyped

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        String password = txtPassword.getText();
        
        try {
            if (ValidarContrase√±a(password).equals(""))
            {
                if (obtenerNivelSeguridad(password) == 0)
                    txtPassword.setBackground(Color.PINK);
                else if(obtenerNivelSeguridad(password) == 1)
                    txtPassword.setBackground(Color.ORANGE);
                else if (obtenerNivelSeguridad(password) == 2)
                    txtPassword.setBackground(Color.CYAN);
                else if (obtenerNivelSeguridad(password) == 3)
                    txtPassword.setBackground(Color.GREEN);

            }
            else 
            {
                txtPassword.setBackground(Color.RED);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(Nuevo_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtPasswordKeyReleased

    
    
    
    // Retorna "" Si la contrase√±a es valida
    // Retorna "1" Si la contrase√±a tiene menos de n caracteres
    // Retorna "2" Si la contrase√±a no tiene mayusculas
    private String ValidarContrase√±a(String Password) throws FileNotFoundException, IOException
    {
        String error = "";
        String texto = ObtenerContenidoArchivo();
        String[] Condiciones = texto.split(" ");
        
        // Si la cadena tiene mas de n caracteres puede seguir
        if (Password.length() < Integer.parseInt(Condiciones[0]))
            error += "1,"+Condiciones[0];
        
        
        // Si la condicion de mayusuclas est√° activa
        else if (Boolean.valueOf(Condiciones[1]))
            if (!ContieneMayusculas(Password))
                error += "2";
        
        return error;
    }
    
    // Devuelve el punteo adicional de la contrase√±a
    private int obtenerNivelSeguridad (String Password) throws IOException
    {
        int Punteo = 0;
        
        String[] Condiciones = ObtenerContenidoArchivo().split(" ");
        
        if (Boolean.valueOf(Condiciones[2]))
        {
            if (Password.contains("1") || Password.contains("2") || Password.contains("3")
             || Password.contains("4") || Password.contains("5") || Password.contains("6")
             || Password.contains("7") || Password.contains("8") || Password.contains("9")
             || Password.contains("0"))
                Punteo++;
        }
        else
        {
            Punteo++;
        }
        
        
        if (ContieneCaracteresEspeciales(Condiciones[3].toCharArray(), Password))
            Punteo++;
        
        if (Boolean.valueOf(Condiciones[4]))
        {
            if (Password.contains(" "))
                Punteo++;
        }
        else
        {
            Punteo++;
        }

        return Punteo;
    }
    
    // Retorna la linea de las condiciones o la linea de los punteos del archivo de contrase√±a en MEIA
    private String ObtenerContenidoArchivo() throws FileNotFoundException, IOException
    {
        String path = "C:\\MEIA\\ValidacionContrase√±a.txt";
        File Archivo = new File(path);
        
        FileReader Leer = new FileReader(Archivo);
        BufferedReader leerArchivo = new BufferedReader(Leer);
        
        String Linea = leerArchivo.readLine();

        Leer.close();
        leerArchivo.close();

        return Linea;

    }
    
    // Verifica si la clave tiene caracteres Especiales
    private boolean ContieneCaracteresEspeciales (char[] caracteres, String Password)
    {
        boolean contiene = false;
        
        for (char caracter : caracteres)
        {
            if (Password.contains(Character.toString(caracter)))
                contiene = true;
        }
        
        return contiene;
    }
    
    private boolean ContieneMayusculas(String Texto)
    {
        boolean Mayusculas = false;
        char [] Caracteres = Texto.toCharArray();
        
        for (char i: Caracteres) {
            if (Character.isUpperCase(i))
                Mayusculas = true;
        }
        
        return Mayusculas;
    }
    
    //Ingresa el usuario al archivo bitacora_usuarios
    public void IngresarUsuarioBitacora(Usuario Nuevo) throws FileNotFoundException, IOException
    {
        String pathRuta = "C:\\MEIA\\Bitacora_Usuarios.txt";
        
        File Archivo = new File(pathRuta);
        FileWriter Escribir = new FileWriter(Archivo,true);
        BufferedWriter bw = new BufferedWriter(Escribir);
        
        RandomAccessFile File = new RandomAccessFile(pathRuta, "rw");
        String NuevoUsuario = Nuevo.Usuario+"|"+Nuevo.Nombre+"|"+Nuevo.Apellido+"|"+Nuevo.Password+"|"+Nuevo.rol+"|"+Nuevo.Fecha+"|"+Nuevo.CorreoAlterno+"|"+Nuevo.Telefono+"|"+Nuevo.PathFotografia+"|"+Nuevo.status;
        
        if(Archivo.length() == 0)
        {
         bw.write(NuevoUsuario);
         bw.close();   
         Escribir.close();
        }
        else
        {
         bw.newLine();
         bw.write(NuevoUsuario);
         bw.close();
         Escribir.close();
        }
        
        JOptionPane.showMessageDialog(null, "Usuario Ingresado con Exito");
        Login Regreso = new Login();
        Regreso.setLocationRelativeTo(null);
        Regreso.show();
        this.dispose();
        
        DescriptorBit√°cora();
       
        /*RandomAccessFile FileSustitucion = new RandomAccessFile(pathRuta, "rw");
        String LineaSustitucion = FileSustitucion.readLine();
        for (int i = 0; i < ContadorLineas; i++) 
        {
            LineaSustitucion = FileSustitucion.readLine();
        }
        String UsuarioSustituto = Nuevo.Usuario+"|"+Nuevo.Nombre+"|"+Nuevo.Apellido+"|"+Nuevo.Password+"|"+Nuevo.rol+"|"+Nuevo.Fecha+"|"+Nuevo.CorreoAlterno+"|"+Nuevo.Telefono+"|"+Nuevo.PathFotografia+"|"+Nuevo.status;
        FileSustitucion.skipBytes(LineaSustitucion.getBytes().length);
        FileSustitucion.writeBytes(UsuarioSustituto);    
       */
        
    }
    
    //m√©todo donde se crea el Descriptor del Usuario y se Actualiza
    public void DescriptorUsuario() throws FileNotFoundException, IOException
    {
        Date Fecha = new Date();
        Login ObtenerDatos = new Login();
        String UsuarioActivo = ObtenerDatos.UsuarioLogeado();
        if(UsuarioActivo == null)
        {
            UsuarioActivo = Acceso.RellenarCaracteres(txtUserName.getText(), 0) ;
        }
        
        
        String path = "C:\\MEIA\\Usuario.txt";
        File Archivo = new File(path);
        FileReader Leer = new FileReader(Archivo);
        BufferedReader leerArchivo = new BufferedReader(Leer);
        String Linea = "";
        int NoRegistros = 0;
        int Activos = 0;
        int Inactivos = 0;        
        
        //Se compara en la posicion 9 porque en esa posicion se encontrara el status a la hora de hacer el split y separarlo.
        while(Linea != null)
        {
            String [] Auxiliar = Linea.split("\\|");
            
            if(Auxiliar[9].equals("1"))
            {
                Activos++;
            }
            else if (Auxiliar[9].equals("0") == true)
            {
                Inactivos++;
            }
            Linea = leerArchivo.readLine();
            NoRegistros++;
        }
        

        Leer.close();
        leerArchivo.close();
        
        
        Descriptor_Usuario Nuevo = new Descriptor_Usuario("Usuario",Fecha.toString(),UsuarioActivo,Fecha.toString(),UsuarioActivo,Integer.toString(NoRegistros),Integer.toString(Activos),Integer.toString(Inactivos));
        Acceso.DescriptorUsuario(Nuevo);
    }
    
    //m√©todo donde se crea el Descriptor de la Bitacora y se Actualiza
    public void DescriptorBit√°cora() throws FileNotFoundException, IOException
    {
        Date Fecha = new Date();
        Login ObtenerDatos = new Login();
        String UsuarioActivo = ObtenerDatos.UsuarioLogeado();
        if(UsuarioActivo == null)
        {
            UsuarioActivo = txtUserName.getText();
        }
        
        
        String path = "C:\\MEIA\\Bitacora_Usuarios.txt";
        File Archivo = new File(path);
        FileReader Leer = new FileReader(Archivo);
        BufferedReader leerArchivo = new BufferedReader(Leer);
        String Linea = "";
         Linea = leerArchivo.readLine();
        int NoRegistros = 0;
        int Activos = 0;
        int Inactivos = 0;  
        String MaxRepeticiones = "";
        String AuxLinea = "";
        
        //Se compara en la posicion 9 porque en esa posicion se encontrara el status a la hora de hacer el split y separarlo.
        while(Linea != null)
        {
            String [] Auxiliar = Linea.split("\\|");
            
            if(Auxiliar[9].equals("1"))
            {
                Activos++;
            }
            else if (Auxiliar[9].equals("0") == true)
            {
                Inactivos++;
            }
            NoRegistros++;
            Linea = leerArchivo.readLine();
        }

        Leer.close();
        leerArchivo.close();
        
        String paths = "C:\\MEIA\\desc_Bitacora_Usuarios.txt";
        File Archivos = new File(paths);
        FileReader Leers = new FileReader(Archivos);
        BufferedReader leerArchivos = new BufferedReader(Leers);
        String Lineas = "";
        Lineas = leerArchivos.readLine();
        
        while(Lineas != null)
        {
            AuxLinea = Lineas;
            Lineas = leerArchivos.readLine();
            if(Lineas == null)
            {
                String[] Separador = AuxLinea.split("\\|");
                MaxRepeticiones = Separador[1];
            }
        }
        
        Descriptor_Bitacora Nuevo = new Descriptor_Bitacora("Usuario",Fecha.toString(),UsuarioActivo,Fecha.toString(),UsuarioActivo,Integer.toString(NoRegistros),Integer.toString(Activos),Integer.toString(Inactivos),MaxRepeticiones); 
        Acceso.DescriptorBitacoraUsuario(Nuevo);
    }   
    
   
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nuevo_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nuevo_Usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarFoto;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblFechaNac;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblUserName;
    private java.awt.Panel panel1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCorreoAlterno;
    private javax.swing.JFormattedTextField txtFechaNac;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JFormattedTextField txtTelefono;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtmostrador;
    // End of variables declaration//GEN-END:variables
}
